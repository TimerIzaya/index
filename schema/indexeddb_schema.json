{
  "IDBFactory": {
    "staticMethods": {
      "open": {
        "kind": "staticMethod",
        "name": "open",
        "definedOn": "IDBFactory",
        "params": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "version",
            "type": "number",
            "optional": true
          }
        ],
        "returns": "IDBOpenDBRequest",
        "exceptions": [
          {
            "name": "TypeError",
            "type": "DOMException"
          }
        ]
      },
      "deleteDatabase": {
        "kind": "staticMethod",
        "name": "deleteDatabase",
        "definedOn": "IDBFactory",
        "params": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": "IDBOpenDBRequest"
      },
      "cmp": {
        "kind": "staticMethod",
        "name": "cmp",
        "definedOn": "IDBFactory",
        "params": [
          {
            "name": "first",
            "type": "any"
          },
          {
            "name": "second",
            "type": "any"
          }
        ],
        "returns": "number",
        "returnEnum": [
          -1,
          0,
          1
        ],
        "exceptions": [
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "databases": {
        "kind": "staticMethod",
        "name": "databases",
        "definedOn": "IDBFactory",
        "params": [],
        "returns": "Promise",
        "returnGeneric": "IDBDatabaseInfo[]"
      }
    },
    "instanceMethods": {},
    "instanceProperties": [],
    "events": []
  },
  "IDBDatabase": {
    "instanceMethods": {
      "transaction": {
        "kind": "instanceMethod",
        "name": "transaction",
        "definedOn": "IDBDatabase",
        "params": [
          {
            "name": "storeNames",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "mode",
            "type": "string",
            "optional": true,
            "enum": [
              "readonly",
              "readwrite",
              "readwriteflush"
            ],
            "default": "readonly"
          },
          {
            "name": "options",
            "type": "object",
            "optional": true,
            "properties": {
              "durability": {
                "type": "string",
                "enum": [
                  "default",
                  "relaxed",
                  "strict"
                ],
                "default": "default"
              }
            }
          }
        ],
        "returns": "IDBTransaction",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "NotFoundError",
            "type": "DOMException"
          },
          {
            "name": "TypeError",
            "type": "TypeError"
          },
          {
            "name": "InvalidAccessError",
            "type": "DOMException"
          }
        ]
      },
      "createObjectStore": {
        "kind": "instanceMethod",
        "name": "createObjectStore",
        "definedOn": "IDBDatabase",
        "params": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "options",
            "type": "object",
            "optional": true,
            "properties": {
              "keyPath": {
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "autoIncrement": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "returns": "IDBObjectStore",
        "exceptions": [
          {
            "name": "ConstraintError",
            "type": "DOMException"
          },
          {
            "name": "InvalidAccessError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "SyntaxError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          }
        ]
      },
      "deleteObjectStore": {
        "kind": "instanceMethod",
        "name": "deleteObjectStore",
        "definedOn": "IDBDatabase",
        "params": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": "void",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "NotFoundError",
            "type": "DOMException"
          }
        ]
      },
      "close": {
        "kind": "instanceMethod",
        "name": "close",
        "definedOn": "IDBDatabase",
        "params": [],
        "returns": "void"
      }
    },
    "instanceProperties": [
      {
        "name": "name",
        "type": "string",
        "readonly": true
      },
      {
        "name": "version",
        "type": "number",
        "readonly": true
      },
      {
        "name": "objectStoreNames",
        "type": "DOMStringList",
        "readonly": true
      }
    ],
    "events": [
      {
        "name": "onclose",
        "definedOn": "IDBDatabase",
        "bubblesFrom": null
      },
      {
        "name": "onversionchange",
        "definedOn": "IDBDatabase",
        "bubblesFrom": null
      },
      {
        "name": "onabort",
        "definedOn": "IDBTransaction",
        "bubblesFrom": "IDBTransaction"
      },
      {
        "name": "onerror",
        "definedOn": "IDBTransaction",
        "bubblesFrom": "IDBTransaction"
      }
    ]
  },
  "IDBTransaction": {
    "instanceMethods": {
      "abort": {
        "kind": "instanceMethod",
        "name": "abort",
        "definedOn": "IDBTransaction",
        "params": [],
        "returns": "void",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          }
        ]
      },
      "commit": {
        "kind": "instanceMethod",
        "name": "commit",
        "definedOn": "IDBTransaction",
        "params": [],
        "returns": "void",
        "exceptions": []
      },
      "objectStore": {
        "kind": "instanceMethod",
        "name": "objectStore",
        "definedOn": "IDBTransaction",
        "params": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": "IDBObjectStore",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "NotFoundError",
            "type": "DOMException"
          }
        ]
      }
    },
    "instanceProperties": [
      {
        "name": "db",
        "type": "IDBDatabase",
        "readonly": true
      },
      {
        "name": "durability",
        "type": "string",
        "readonly": true
      },
      {
        "name": "error",
        "type": [
          "DOMException",
          "null"
        ],
        "readonly": true
      },
      {
        "name": "mode",
        "type": "string",
        "readonly": true
      },
      {
        "name": "objectStoreNames",
        "type": "DOMStringList",
        "readonly": true
      }
    ],
    "events": [
      {
        "name": "onabort",
        "definedOn": "IDBTransaction",
        "bubblesFrom": null
      },
      {
        "name": "oncomplete",
        "definedOn": "IDBTransaction",
        "bubblesFrom": null
      },
      {
        "name": "onerror",
        "definedOn": "IDBTransaction",
        "bubblesFrom": null
      }
    ]
  },
  "IDBObjectStore": {
    "instanceMethods": {
      "add": {
        "kind": "instanceMethod",
        "name": "add",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "value",
            "type": "any"
          },
          {
            "name": "key",
            "type": "any",
            "optional": true
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "ReadOnlyError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          },
          {
            "name": "ConstraintError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "DataCloneError",
            "type": "DOMException"
          }
        ]
      },
      "put": {
        "kind": "instanceMethod",
        "name": "put",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "value",
            "type": "any"
          },
          {
            "name": "key",
            "type": "any",
            "optional": true
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "ReadOnlyError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "DataCloneError",
            "type": "DOMException"
          }
        ]
      },
      "get": {
        "kind": "instanceMethod",
        "name": "get",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "key",
            "type": "any"
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          }
        ]
      },
      "delete": {
        "kind": "instanceMethod",
        "name": "delete",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "key",
            "type": "any"
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "ReadOnlyError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          }
        ]
      },
      "clear": {
        "kind": "instanceMethod",
        "name": "clear",
        "definedOn": "IDBObjectStore",
        "params": [],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "ReadOnlyError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          }
        ]
      },
      "openCursor": {
        "kind": "instanceMethod",
        "name": "openCursor",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "range",
            "type": "IDBKeyRange|any",
            "optional": true
          },
          {
            "name": "direction",
            "type": "string",
            "optional": true,
            "default": "next",
            "enum": [
              "next",
              "nextunique",
              "prev",
              "prevunique"
            ]
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "index": {
        "kind": "instanceMethod",
        "name": "index",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": "IDBIndex",
        "exceptions": [
          {
            "name": "NotFoundError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          }
        ]
      },
      "createIndex": {
        "name": "createIndex",
        "kind": "instanceMethod",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "keyPath",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "options",
            "type": "object",
            "optional": true,
            "properties": {
              "unique": {
                "type": "boolean",
                "default": false
              },
              "multiEntry": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "returns": "IDBIndex",
        "exceptions": [
          {
            "name": "ConstraintError",
            "type": "DOMException"
          },
          {
            "name": "InvalidAccessError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "SyntaxError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          }
        ]
      },
      "deleteIndex": {
        "kind": "instanceMethod",
        "name": "deleteIndex",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": "void",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "NotFoundError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          }
        ]
      },
      "getAll": {
        "kind": "instanceMethod",
        "name": "getAll",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "query",
            "type": "any",
            "optional": true
          },
          {
            "name": "count",
            "type": "number",
            "optional": true
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "getAllKeys": {
        "kind": "instanceMethod",
        "name": "getAllKeys",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "query",
            "type": "any",
            "optional": true
          },
          {
            "name": "count",
            "type": "number",
            "optional": true
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "count": {
        "kind": "instanceMethod",
        "name": "count",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "query",
            "type": "any",
            "optional": true
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "openKeyCursor": {
        "kind": "instanceMethod",
        "name": "openKeyCursor",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "range",
            "type": "IDBKeyRange|any",
            "optional": true
          },
          {
            "name": "direction",
            "type": "string",
            "optional": true,
            "default": "next",
            "enum": [
              "next",
              "nextunique",
              "prev",
              "prevunique"
            ]
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "getKey": {
        "kind": "instanceMethod",
        "name": "getKey",
        "definedOn": "IDBObjectStore",
        "params": [
          {
            "name": "key",
            "type": "any"
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          },
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          }
        ]
      }
    },
    "instanceProperties": [
      {
        "name": "name",
        "type": "string",
        "readonly": true
      },
      {
        "name": "keyPath",
        "type": "string|string[]",
        "readonly": true
      },
      {
        "name": "indexNames",
        "type": "DOMStringList",
        "readonly": true
      },
      {
        "name": "autoIncrement",
        "type": "boolean",
        "readonly": true
      },
      {
        "name": "transaction",
        "type": "IDBTransaction",
        "readonly": true
      }
    ],
    "events": []
  },
  "IDBIndex": {
    "instanceMethods": {
      "get": {
        "kind": "instanceMethod",
        "name": "get",
        "definedOn": "IDBIndex",
        "params": [
          {
            "name": "query",
            "type": "any"
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "getKey": {
        "kind": "instanceMethod",
        "name": "getKey",
        "definedOn": "IDBIndex",
        "params": [
          {
            "name": "query",
            "type": "any"
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "count": {
        "kind": "instanceMethod",
        "name": "count",
        "definedOn": "IDBIndex",
        "params": [
          {
            "name": "query",
            "type": "any",
            "optional": true
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "openCursor": {
        "kind": "instanceMethod",
        "name": "openCursor",
        "definedOn": "IDBIndex",
        "params": [
          {
            "name": "query",
            "type": "any",
            "optional": true
          },
          {
            "name": "direction",
            "type": "string",
            "optional": true,
            "default": "next"
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          }
        ]
      }
    },
    "instanceProperties": [
      {
        "name": "name",
        "type": "string",
        "readonly": true
      },
      {
        "name": "objectStore",
        "type": "IDBObjectStore",
        "readonly": true
      },
      {
        "name": "keyPath",
        "type": "string|string[]",
        "readonly": true
      },
      {
        "name": "multiEntry",
        "type": "boolean",
        "readonly": true
      },
      {
        "name": "unique",
        "type": "boolean",
        "readonly": true
      }
    ],
    "events": []
  },
  "IDBCursor": {
    "instanceMethods": {
      "advance": {
        "kind": "instanceMethod",
        "name": "advance",
        "definedOn": "IDBCursor",
        "params": [
          {
            "name": "count",
            "type": "number"
          }
        ],
        "returns": "void",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          }
        ]
      },
      "continue": {
        "kind": "instanceMethod",
        "name": "continue",
        "definedOn": "IDBCursor",
        "params": [
          {
            "name": "key",
            "type": "any",
            "optional": true
          }
        ],
        "returns": "void",
        "exceptions": [
          {
            "name": "InvalidStateError",
            "type": "DOMException"
          }
        ]
      },
      "update": {
        "kind": "instanceMethod",
        "name": "update",
        "definedOn": "IDBCursor",
        "params": [
          {
            "name": "value",
            "type": "any"
          }
        ],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "ReadOnlyError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          },
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "delete": {
        "kind": "instanceMethod",
        "name": "delete",
        "definedOn": "IDBCursor",
        "params": [],
        "returns": "IDBRequest",
        "exceptions": [
          {
            "name": "ReadOnlyError",
            "type": "DOMException"
          },
          {
            "name": "TransactionInactiveError",
            "type": "DOMException"
          }
        ]
      }
    },
    "instanceProperties": [
      {
        "name": "key",
        "type": "any",
        "readonly": true
      },
      {
        "name": "primaryKey",
        "type": "any",
        "readonly": true
      },
      {
        "name": "source",
        "type": "IDBObjectStore | IDBIndex",
        "readonly": true
      },
      {
        "name": "direction",
        "type": "string",
        "readonly": true
      }
    ],
    "events": []
  },
  "IDBCursorWithValue": {
    "inherits": "IDBCursor",
    "instanceProperties": [
      {
        "name": "value",
        "type": "any",
        "readonly": true
      }
    ],
    "instanceMethods": {},
    "events": []
  },
  "IDBRequest": {
    "instanceProperties": [
      {
        "name": "result",
        "type": "any",
        "readonly": true
      },
      {
        "name": "error",
        "type": "DOMException",
        "readonly": true
      },
      {
        "name": "source",
        "type": "IDBObjectStore | IDBIndex | IDBCursor",
        "readonly": true
      },
      {
        "name": "transaction",
        "type": "IDBTransaction",
        "readonly": true
      },
      {
        "name": "readyState",
        "type": "string",
        "readonly": true
      }
    ],
    "events": [
      {
        "name": "onsuccess",
        "definedOn": "IDBRequest",
        "bubblesFrom": null
      },
      {
        "name": "onerror",
        "definedOn": "IDBRequest",
        "bubblesFrom": null
      }
    ],
    "instanceMethods": {}
  },
  "IDBOpenDBRequest": {
    "inherits": "IDBRequest",
    "events": [
      {
        "name": "onblocked",
        "definedOn": "IDBOpenDBRequest",
        "bubblesFrom": null
      },
      {
        "name": "onupgradeneeded",
        "definedOn": "IDBOpenDBRequest",
        "bubblesFrom": null
      },
      {
        "name": "onblocked",
        "definedOn": "IDBFactory",
        "bubblesFrom": "IDBFactory"
      }
    ],
    "instanceMethods": {},
    "instanceProperties": []
  },
  "IDBKeyRange": {
    "staticMethods": {
      "only": {
        "kind": "staticMethod",
        "name": "only",
        "definedOn": "IDBKeyRange",
        "params": [
          {
            "name": "value",
            "type": "any"
          }
        ],
        "returns": "IDBKeyRange",
        "exceptions": [
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "lowerBound": {
        "kind": "staticMethod",
        "name": "lowerBound",
        "definedOn": "IDBKeyRange",
        "params": [
          {
            "name": "lower",
            "type": "any"
          },
          {
            "name": "open",
            "type": "boolean",
            "optional": true,
            "default": false
          }
        ],
        "returns": "IDBKeyRange",
        "exceptions": [
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "upperBound": {
        "kind": "staticMethod",
        "name": "upperBound",
        "definedOn": "IDBKeyRange",
        "params": [
          {
            "name": "upper",
            "type": "any"
          },
          {
            "name": "open",
            "type": "boolean",
            "optional": true,
            "default": false
          }
        ],
        "returns": "IDBKeyRange",
        "exceptions": [
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      },
      "bound": {
        "kind": "staticMethod",
        "name": "bound",
        "definedOn": "IDBKeyRange",
        "params": [
          {
            "name": "lower",
            "type": "any"
          },
          {
            "name": "upper",
            "type": "any"
          },
          {
            "name": "openLower",
            "type": "boolean",
            "optional": true,
            "default": false
          },
          {
            "name": "openUpper",
            "type": "boolean",
            "optional": true,
            "default": false
          }
        ],
        "returns": "IDBKeyRange",
        "exceptions": [
          {
            "name": "DataError",
            "type": "DOMException"
          }
        ]
      }
    },
    "instanceProperties": [
      {
        "name": "lower",
        "type": "any",
        "readonly": true
      },
      {
        "name": "upper",
        "type": "any",
        "readonly": true
      },
      {
        "name": "lowerOpen",
        "type": "boolean",
        "readonly": true
      },
      {
        "name": "upperOpen",
        "type": "boolean",
        "readonly": true
      }
    ],
    "instanceMethods": {},
    "events": []
  },
  "IDBVersionChangeEvent": {
    "instanceProperties": [
      {
        "name": "oldVersion",
        "type": "number",
        "readonly": true
      },
      {
        "name": "newVersion",
        "type": "number|null",
        "readonly": true
      }
    ],
    "instanceMethods": {},
    "events": []
  },
  "IDBDatabaseInfo": {
    "instanceProperties": [
      {
        "name": "name",
        "type": "string",
        "readonly": true
      },
      {
        "name": "version",
        "type": "number",
        "readonly": true
      }
    ]
  }
}